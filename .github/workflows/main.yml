name: Kamnet Backend CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x]
        mongodb-version: ['5.0', '6.0']
      
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.8.0
      with:
        mongodb-version: ${{ matrix.mongodb-version }}
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linter
      run: npm run lint || echo "Linting not configured"
      
    - name: Run tests
      run: npm test
      env:
        NODE_ENV: test
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        
  deploy:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node (CI)
      uses: actions/setup-node@v4
      with:
        node-version: ${{ secrets.NODE_VERSION || '18' }}
        cache: 'npm'
        
    - name: Deploy to EC2 via SSH
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: ${{ secrets.EC2_SSH_PORT }}
        script_stop: true
        script: |
          set -e
          cd "${{ secrets.WORKDIR }}"
          
          # Ensure correct branch/commit
          git fetch --all --prune
          git checkout "${{ secrets.DEPLOY_BRANCH || 'main' }}"
          git reset --hard "origin/${{ secrets.DEPLOY_BRANCH || 'main' }}"
          # Alternatively deploy exact commit:
          # git fetch origin $GITHUB_SHA && git checkout $GITHUB_SHA
          
          # Install production deps
          npm ci --omit=dev
          
          # Optional: run migrations
          # npm run migrate
          
          # Zero-downtime restart with PM2
          if pm2 describe "${{ secrets.PM2_APP_NAME }}" >/dev/null 2>&1; then
            pm2 reload "${{ secrets.PM2_APP_NAME }}"
          else
            pm2 start index.js --name "${{ secrets.PM2_APP_NAME }}"
          fi
          pm2 save
      
    - name: Send deployment notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_CHANNEL: deployments
        SLACK_COLOR: ${{ job.status }}
        SLACK_TITLE: Kamnet Backend Deployment
        SLACK_MESSAGE: Backend deployed to production
        SLACK_FOOTER: Powered by GitHub Actions
